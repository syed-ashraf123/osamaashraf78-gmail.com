from lxml import html
import requests
import os
import time
import pyautogui
from time import sleep
from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
# visibility of element
driver = webdriver.Chrome()
driver.get(
    "https://apicommunity.force.com/api/API_CourseDetail_Lectures?id=a1R1Y000007eByR")
sleep(3)
driver.find_element_by_xpath(
    "//label[contains(.,'User Name')]//following::input[1]").send_keys("zylstradanet@gmail.com")
driver.find_element_by_xpath(
    "//label[contains(.,'Password')]//following::input[1]").send_keys("Wallace@@9778")
driver.find_element_by_xpath(
    "//label[contains(.,'Password')]//following::input[1]").send_keys(u'\ue007')
sleep(15)
# 'GAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGAGAAGA'
# SEQUENCE = 'CCTAAACTATAGAAGGACAGCTCAAACACAAAGTTACCTAAACTATAGAAGGACAGCTCAAACACAAAGTTACCTAAACTATAGAAGGACAGCTCAAACACAAAGTTACCTAAACTATAGAAGGACAGCTCAAACACAAAGTTACCTAAACTATAGAAGGACA'
# # seq_query_field = driver.find_element_by_id("seq")
# # seq_query_field.send_keys(SEQUENCE)
# # blast_button = driver.find_element_by_id("b1")
# # blast_button.click()

# # wait until results are loaded
# # WebDriverWait(driver, 60).until(visibility_of_element_located((By.ID, 'grView')))
# pyautogui.hotkey('ctrl', 's')
# time.sleep(1)
# pyautogui.typewrite("SEQUENCE" + '.html')
# pyautogui.hotkey('enter')
content = driver.page_source
# write the page content
os.mkdir('page')
with open('page/page.html', 'w') as fp:
    fp.write(content)


base = driver.current_url
sess = requests.Session()
sess.get(base)            # sets cookies

# parse html
h = html.fromstring(content)
# get css/js files loaded in the head
for hr in h.xpath('head//@href'):
    if not hr.startswith('http'):
        local_path = 'page/' + hr
        hr = base + hr
    res = sess.get(hr)
    if not os.path.exists(os.path.dirname(local_path)):
        os.makedirs(os.path.dirname(local_path))
    with open(local_path, 'wb') as fp:
        fp.write(res.content)

# get image/js files from the body.  skip anything loaded from outside sources
for src in h.xpath('//@src'):
    if not src or src.startswith('http'):
        continue
    local_path = 'page/' + src
    print(local_path)
    src = base + src
    res = sess.get(hr)
    if not os.path.exists(os.path.dirname(local_path)):
        os.makedirs(os.path.dirname(local_path))
    with open(local_path, 'wb') as fp:
        fp.write(res.content)
